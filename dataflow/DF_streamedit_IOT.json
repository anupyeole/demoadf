{
	"name": "DF_streamedit_IOT",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Jsonstream",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_IOT",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          messageId as integer,",
				"          deviceId as string,",
				"          temperature as double,",
				"          humidity as double,",
				"          EventProcessedUtcTime as string,",
				"          PartitionId as integer,",
				"          EventEnqueuedUtcTime as string,",
				"          IoTHub as (MessageId as string, CorrelationId as string, ConnectionDeviceId as string, ConnectionDeviceGenerationId as string, EnqueuedTime as string)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> source1",
				"source1 derive(temperature = round(temperature, 2),",
				"          humidity = round(humidity, 2)) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          messageId,",
				"          deviceId,",
				"          temperature,",
				"          humidity,",
				"          EventProcessedUtcTime,",
				"          PartitionId,",
				"          EventEnqueuedUtcTime,",
				"          IoTHub",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}